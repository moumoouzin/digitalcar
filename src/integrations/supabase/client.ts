
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

export const SUPABASE_URL = "https://jqrwvfmbocfpspomwddq.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Impxcnd2Zm1ib2NmcHNwb213ZGRxIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDM0NTQ3MjgsImV4cCI6MjA1OTAzMDcyOH0.VH6KXJo3TLCmLoLLQn7-5H-45I4JW4m32w0uYiyoxYM";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    persistSession: true,
    autoRefreshToken: true,
  }
});

// Verificar se a tabela financing_requests existe
(async () => {
  try {
    // Verificar se a tabela 'financing_requests' existe
    const { data, error } = await supabase
      .from('financing_requests')
      .select('id')
      .limit(1);
    
    if (error) {
      console.warn('A tabela financing_requests pode não existir:', error);
      console.log('Execute o script SQL para criar a tabela (create_financing_table.sql)');
    } else {
      console.log('Tabela financing_requests verificada com sucesso!');
    }
  } catch (error) {
    console.error('Erro ao verificar tabela financing_requests:', error);
  }
})();

// Função para limpar o cache de esquema do Supabase
export const refreshSchemaCache = async () => {
  try {
    // Forçar o Supabase a recarregar o esquema
    await fetch(`${SUPABASE_URL}/rest/v1/?apikey=${SUPABASE_PUBLISHABLE_KEY}`);
    
    // Ou podemos fazer uma consulta simples para atualizar o cache
    await supabase.from('car_ads').select('id').limit(1);
    
    console.log('Cache de esquema atualizado');
    return true;
  } catch (error) {
    console.error('Erro ao atualizar cache de esquema:', error);
    return false;
  }
};
